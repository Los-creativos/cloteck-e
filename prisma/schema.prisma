generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Customer {
  customer_id  Int     @id @default(autoincrement())
  name         String  @db.VarChar(50)
  last_name    String  @db.VarChar(50)
  email        String  @unique @db.VarChar(50)
  password     String  @db.VarChar(100)
  phone_number Int?
  type_user    String  @db.VarChar(50)
  Order        Order[]
}

model Product {
  product_id      Int               @id @default(autoincrement())
  name            String            @db.VarChar(50)
  description     String            @db.VarChar(200)
  price           Decimal           @db.Decimal(10, 2)
  ProductCategory ProductCategory[]
  Attribute       Attribute[]
  OrderProduct    OrderProduct[]
}

model Category {
  category_id     Int               @id @default(autoincrement())
  name            String            @db.VarChar(50)
  description     String            @db.VarChar(200)
  ProductCategory ProductCategory[]
}

model ProductCategory {
  product_category_id Int      @id @default(autoincrement())
  product_id          Int
  category_id         Int
  category            Category @relation(fields: [category_id], references: [category_id])
  product             Product  @relation(fields: [product_id], references: [product_id])
}

model Size {
  size_id   Int         @id @default(autoincrement())
  name      String      @db.VarChar(50)
  Attribute Attribute[]
}

model Color {
  color_id  Int         @id @default(autoincrement())
  name      String      @db.VarChar(50)
  Attribute Attribute[]
}

model Attribute {
  attribute_id Int     @id @default(autoincrement())
  product_id   Int
  size_id      Int
  color_id     Int
  quantity     Int
  image        String  @db.Char(100)
  color        Color   @relation(fields: [color_id], references: [color_id])
  product      Product @relation(fields: [product_id], references: [product_id])
  size         Size    @relation(fields: [size_id], references: [size_id])
}

model Order {
  order_id     Int            @id @default(autoincrement())
  user_id      Int
  date         DateTime       @default(now())
  active       Boolean
  customer     Customer       @relation(fields: [user_id], references: [customer_id], onDelete: Cascade)
  OrderProduct OrderProduct[]
}

model Region {
  region_id Int    @id @default(autoincrement())
  name      String @db.VarChar(50)
  taxes     Int
}

model OrderProduct {
  order_product_id Int     @id @default(autoincrement())
  order_id         Int
  product_id       Int
  size_name        String  @db.Char(50)
  color_name       String  @db.Char(50)
  quantity         Int
  image            String  @db.Char(100)
  Order            Order   @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
  Product          Product @relation(fields: [product_id], references: [product_id], onDelete: Cascade)
}
